#jinja2: lstrip_blocks: "True", trim_blocks: "True"
# {{ ansible_managed }}
{% set c = nginx_conf %}

{% if c.daemon %}
daemon                          {{ c.daemon }};
{% endif %}
{% if c.super_user %}
user                            {{ c.daemon_user }};
{% endif %}
worker_processes                {{ c.worker_processes }};
{% if c.worker_rlimit_nofile %}
worker_rlimit_nofile            {{ c.worker_rlimit_nofile }};
{% endif %}
{% if c.pid %}
pid                             {{ c.pid }};
{% endif %}
{% if c.error_log|is_a('list') %}
  {% for log_item in c.error_log %}
error_log                       {{ log_item }} {{ c.error_log_severity }};
  {% endfor %}
{% elif c.error_log is string %}
error_log                       {{ c.error_log }} {{ c.error_log_severity }};
{% endif %}
{% for line in c._prepend %}
  {{ line }};
{% endfor %}
events {
{% for line in c.events._prepend %}
  {{ line }};
{% endfor %}
  accept_mutex                  {{ c.events.accept_mutex }};
{% if c.events.accept_mutex_delay %}
  accept_mutex_delay            {{ c.events.accept_mutex_delay }};
{% endif %}
{% for line in c.events.debug_connection %}
  {{ line }};
{% endfor %}
{% if c.events.multi_accept == 'on' %}
  multi_accept                  on;
{% endif %}
{% if c.events.use %}
  use                           {{ c.events.use }};
{% endif %}
  worker_aio_requests           {{ c.events.worker_aio_requests }};
  worker_connections            {{ c.events.worker_connections }};
{% for line in c.events._append %}
  {{ line }};
{% endfor %}
}

http {
{% for line in c.http._prepend %}
  {{ line }};
{% endfor %}
  include                       {{ c.conf_dir }}/mime.types;
  default_type                  application/octet-stream;
{% for log_format in c.http.log_format %}
  log_format                    {{ log_format }};
{% endfor %}

{% if c.http.access_log|is_a('list') %}
  {% for log_item in c.http.access_log %}
  access_log                    {{ log_item }}{% if c.http.access_log_format %} {{ c.http.access_log_format}}{% endif %};
  {% endfor %}
{% elif c.http.access_log is string %}
  access_log                    {{ c.http.access_log }}{% if c.http.access_log_format %} {{ c.http.access_log_format }}{% endif %};
{% endif %}

{% if c.http.sendfile == 'on' %}
  sendfile                      on;
  {% if c.http.tcp_nopush == 'on' %}
  tcp_nopush                    on;
  {% endif %}
{% endif %}
  server_tokens                 {{ c.http.server_tokens }};
  types_hash_max_size           {{ c.http.types_hash_max_size }};
  types_hash_bucket_size        {{ c.http.types_hash_bucket_size }};
  server_names_hash_bucket_size {{ c.http.server_names_hash_bucket_size }};
  server_names_hash_max_size    {{ c.http.server_names_hash_max_size }};
  keepalive_timeout             {{ c.http.keepalive_timeout }};
  keepalive_requests            {{ c.http.keepalive_requests }};
  client_body_timeout           {{ c.http.client_body_timeout }};
  send_timeout                  {{ c.http.send_timeout }};
  lingering_timeout             {{ c.http.lingering_timeout }};
  tcp_nodelay                   {{ c.http.tcp_nodelay }};

{% if c.http.gzip == 'on' %}
  gzip                          on;
  {% if c.http.gzip_buffers %}
  gzip_buffers                  {{ c.http.gzip_buffers }};
  {% endif %}
  gzip_comp_level               {{ c.http.gzip_comp_level }};
  {% if c.http.gzip_disable %}
  gzip_disable                  {{ c.http.gzip_disable }};
  {% endif %}
  gzip_min_length               {{ c.http.gzip_min_length }};
  gzip_http_version             {{ c.http.gzip_http_version }};
  {% if c.http.gzip_proxied %}
  gzip_proxied                  {{ c.http.gzip_proxied }};
  {% endif %}
  {% if c.http.gzip_types|is_a('list') %}
  gzip_types                    {{ c.http.gzip_types|join(' ') }};
  {% elif c.http.gzip_types is string %}
  gzip_types                    {{ c.http.gzip_types }};
  {% endif %}
  gzip_vary                     {{ c.http.gzip_vary }};
{% endif %}

{% if c.http.client_body_temp_path %}
  client_body_temp_path         {{ c.http.client_body_temp_path }};
{% endif %}
{% if c.http.client_max_body_size %}
  client_max_body_size          {{ c.http.client_max_body_size }};
{% endif %}
{% if c.http.client_body_buffer_size %}
  client_body_buffer_size       {{ c.http.client_body_buffer_size }};
{% endif %}
{% if c.http.proxy_redirect %}
  proxy_redirect                {{ c.http.proxy_redirect }};
{% endif %}
{% if c.http.proxy_temp_path %}
  proxy_temp_path               {{ c.http.proxy_temp_path }};
{% endif %}
{% if c.http.proxy_connect_timeout %}
  proxy_connect_timeout         {{ c.http.proxy_connect_timeout }};
{% endif %}
{% if c.http.proxy_send_timeout %}
  proxy_send_timeout            {{ c.http.proxy_send_timeout }};
{% endif %}
{% if c.http.proxy_read_timeout %}
  proxy_read_timeout            {{ c.http.proxy_read_timeout }};
{% endif %}
{% if c.http.proxy_buffers %}
  proxy_buffers                 {{ c.http.proxy_buffers }};
{% endif %}
{% if c.http.proxy_buffer_size %}
  proxy_buffer_size             {{ c.http.proxy_buffer_size }};
{% endif %}
{% if c.http.proxy_http_version %}
  proxy_http_version            {{ c.http.proxy_http_version }};
{% endif %}
{% for header in c.http.proxy_set_header %}
  proxy_set_header              {{ header }};
{% endfor %}
{% for header in c.http.proxy_hide_header %}
  proxy_hide_header             {{ header }};
{% endfor %}
{% for header in c.http.proxy_pass_header %}
  proxy_pass_header             {{ header }};
{% endfor %}
{% if c.http.proxy_headers_hash_bucket_size %}
  proxy_headers_hash_bucket_size {{ c.http.proxy_headers_hash_bucket_size }};
{% endif %}
{% for proxy_cache in c.http.proxy_cache|d([]) %}
  {% set proxy_cache = _nginx_conf_http_proxy_cache|combine(proxy_cache) %}
  proxy_cache_path              {{ proxy_cache.path }} keys_zone={{ proxy_cache.keys_zone }}
    {%- if proxy_cache.levels %} levels={{ proxy_cache.levels }}{% endif %}
    {%- if proxy_cache.max_size %} max_size={{ proxy_cache.max_size }}{% endif %}
    {%- if proxy_cache.inactive %} inactive={{ proxy_cache.inactive }}{% endif %}
    {%- if proxy_cache.use_temp_path %} use_temp_path={{ proxy_cache.use_temp_path }}{% endif %}
    {%- if proxy_cache.loader_files %} loader_files={{ proxy_cache.loader_files }}{% endif %}
    {%- if proxy_cache.loader_sleep %} loader_sleep={{ proxy_cache.loader_sleep }}{% endif %}
    {%- if proxy_cache.loader_threshold %} loader_threshold={{ proxy_cache.loader_threshold }}{% endif %};
{% endfor %}
{% for fastcgi_cache in c.http.fastcgi_cache|d([]) %}
  {% set fastcgi_cache = _nginx_conf_http_fastcgi_cache|combine(fastcgi_cache) %}
  fastcgi_cache_path            {{ fastcgi_cache.path }}
  {%- if fastcgi_cache.levels %} levels={{ fastcgi_cache.levels }}{% endif %}
  {%- if fastcgi_cache.keys_zone %} keys_zone={{ fastcgi_cache.keys_zone }}{% endif %}
  {%- if fastcgi_cache.max_size %} max_size={{ fastcgi_cache.max_size }}{% endif %}
  {%- if fastcgi_cache.inactive %} inactive={{ fastcgi_cache.inactive }}{% endif %};
{% endfor %}
{% if c.http.fastcgi_cache_key %}
  fastcgi_cache_key             {{ c.http.fastcgi_cache_key }};
{% endif %}
{% if c.http.fastcgi_cache_use_stale %}
  fastcgi_cache_use_stale       {{ c.http.fastcgi_cache_use_stale }};
{% endif %}
  include                       {{ c.conf_dir }}/conf.d/*.conf;
  include                       {{ c.conf_dir }}/sites-enabled/*;
{% for line in c.http._append %}
  {{ line }};
{% endfor %}
}
{% if c.mail %}
mail {
  include                       {{ c.conf_dir }}/conf.mail.d/*.conf;
}
{% endif %}
{% if c.stream %}
stream {
  include                       {{ c.conf_dir }}/conf.stream.d/*.conf;
  include                       {{ c.conf_dir }}/streams-enabled/*;
}
{% endif %}

{% for line in c._append %}
  {{ line }};
{% endfor %}
